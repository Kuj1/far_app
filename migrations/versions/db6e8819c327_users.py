"""users

Revision ID: db6e8819c327
Revises: 
Create Date: 2022-01-10 05:02:07.960943

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'db6e8819c327'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cards_rent_br',
    sa.Column('card_id', sa.Integer(), nullable=False),
    sa.Column('card_number', sa.Integer(), nullable=True, sqlite_on_conflict_unique='REPLACE'),
    sa.Column('section', sa.String(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('photo', sa.String(), nullable=True),
    sa.Column('date_post', sa.Integer(), nullable=True),
    sa.Column('author_card', sa.String(), nullable=True),
    sa.Column('region_address', sa.String(), nullable=True),
    sa.Column('street_address', sa.String(), nullable=True),
    sa.Column('size', sa.Integer(), nullable=True),
    sa.Column('price', sa.Integer(), nullable=True),
    sa.Column('price_for_what', sa.String(), nullable=True),
    sa.Column('contacts', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('card_id'),
    sa.UniqueConstraint('card_number')
    )
    op.create_table('cards_rent_land',
    sa.Column('card_id', sa.Integer(), nullable=False),
    sa.Column('card_number', sa.Integer(), nullable=True, sqlite_on_conflict_unique='REPLACE'),
    sa.Column('section', sa.String(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('photo', sa.String(), nullable=True),
    sa.Column('date_post', sa.Integer(), nullable=True),
    sa.Column('author_card', sa.String(), nullable=True),
    sa.Column('placement', sa.String(), nullable=True),
    sa.Column('size', sa.Integer(), nullable=True),
    sa.Column('price', sa.Integer(), nullable=True),
    sa.Column('price_for_what', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('restrictions', sa.String(), nullable=True),
    sa.Column('cadastr_number_f', sa.Integer(), nullable=True),
    sa.Column('cadastr_number_s', sa.Integer(), nullable=True),
    sa.Column('electricity', sa.String(), nullable=True),
    sa.Column('water', sa.String(), nullable=True),
    sa.Column('roads', sa.String(), nullable=True),
    sa.Column('contacts', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('card_id'),
    sa.UniqueConstraint('card_number')
    )
    op.create_table('cards_sell_br',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('card_number', sa.Integer(), nullable=True, sqlite_on_conflict_unique='REPLACE'),
    sa.Column('section', sa.String(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('photo', sa.String(), nullable=True),
    sa.Column('date_post', sa.Integer(), nullable=True),
    sa.Column('author_card', sa.String(), nullable=True),
    sa.Column('region_address', sa.String(), nullable=True),
    sa.Column('street_address', sa.String(), nullable=True),
    sa.Column('size', sa.Integer(), nullable=True),
    sa.Column('price', sa.Integer(), nullable=True),
    sa.Column('contacts', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('card_number')
    )
    op.create_table('cards_sell_land',
    sa.Column('card_id', sa.Integer(), nullable=False),
    sa.Column('card_number', sa.Integer(), nullable=True, sqlite_on_conflict_unique='REPLACE'),
    sa.Column('section', sa.String(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('photo', sa.String(), nullable=True),
    sa.Column('date_post', sa.Integer(), nullable=True),
    sa.Column('author_card', sa.String(), nullable=True),
    sa.Column('placement', sa.String(), nullable=True),
    sa.Column('size', sa.Integer(), nullable=True),
    sa.Column('price', sa.Integer(), nullable=True),
    sa.Column('price_for_what', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('restrictions', sa.String(), nullable=True),
    sa.Column('cadastr_number_f', sa.Integer(), nullable=True),
    sa.Column('cadastr_number_s', sa.Integer(), nullable=True),
    sa.Column('electricity', sa.String(), nullable=True),
    sa.Column('water', sa.String(), nullable=True),
    sa.Column('roads', sa.String(), nullable=True),
    sa.Column('contacts', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('card_id'),
    sa.UniqueConstraint('card_number')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('cards_sell_land')
    op.drop_table('cards_sell_br')
    op.drop_table('cards_rent_land')
    op.drop_table('cards_rent_br')
    # ### end Alembic commands ###
